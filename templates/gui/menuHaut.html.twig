<nav class="navbar navbar-light navbar-glass navbar-top navbar-expand">
    <button class="btn navbar-toggler-humburger-icon navbar-toggler me-1 me-sm-3" type="button" data-bs-toggle="collapse" data-bs-target="#navbarVerticalCollapse" aria-controls="navbarVerticalCollapse" aria-expanded="false" aria-label="Ouvrir/Fermer">
        <span class="navbar-toggle-icon">
            <span class="toggle-line"></span>
        </span>
    </button>
    <a class="navbar-brand me-1 me-sm-3" href="{{ path('admin.home') }}">
        <div class="d-flex align-items-center">
            <img class="me-1" src="{{ asset('assets/img/favicons/favicon-removebg.png') }}" alt="" width="40">
            <span class="font-sans-serif">Inventaire</span>
        </div>
    </a>
    <ul class="navbar-nav navbar-nav-icons ms-auto flex-row align-items-center">
        <li class="nav-item px-2">
            <div class="theme-control-toggle fa-icon-wait">
                <input class="form-check-input ms-0 theme-control-toggle-input" id="themeControlToggle" type="checkbox" data-theme-control="theme" value="dark" />
                <label class="mb-0 theme-control-toggle-label theme-control-toggle-light" for="themeControlToggle" data-bs-toggle="tooltip" data-bs-placement="left" title="Clair">
                    <span class="fas fa-sun fs-0"></span>
                </label>
                <label class="mb-0 theme-control-toggle-label theme-control-toggle-dark" for="themeControlToggle" data-bs-toggle="tooltip" data-bs-placement="left" title="Sombre">
                    <span class="fas fa-moon fs-0"></span>
                </label>
            </div>
        </li>
        <li class="nav-item dropdown">
            <a class="nav-link {% if notifications|length > 0 %} notification-indicator notification-indicator-danger notification-indicator-fill {% endif %} px-0 fa-icon-wait" id="navbarDropdownNotification" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-hide-on-body-scroll="data-hide-on-body-scroll">
                <span class="fas fa-bell {% if notifications|length > 0 %} fa-shake {% endif %}" data-fa-transform="shrink-6" style="font-size: 34px;"></span>
                {% if notifications|length > 0 %}
                    <span class="notification-indicator-number fa-shake">{% if notifications|length > 9 %}+9{% else %}{{ notifications|length }}{% endif %}</span>
                {% endif %}
            </a>
            <div class="dropdown-menu dropdown-caret dropdown-caret dropdown-menu-end dropdown-menu-card dropdown-menu-notification dropdown-caret-bg" aria-labelledby="navbarDropdownNotification">
                <div class="card card-notification shadow-none">
                    <div class="card-header">
                        <div class="row justify-content-between align-items-center">
                            <div class="col-auto">
                                <h6 class="card-header-title mb-0">Notifications</h6>
                            </div>
                            {% if notifications is not empty %}
                            <div class="col-auto">
                                <a class="card-link fw-normal marquer-comme-lu" id="marquer-comme-lu">Marquer comme lu</a>
                            </div>
                            {% endif %}
                        </div>
                    </div>
                    <div class="scrollbar-overlay" style="max-height:19rem">
                        <div class="list-group list-group-flush fw-normal fs--1">
                            {% if notificationsNotRead|length > 0 %}
                                <div class="list-group-title border-bottom" id="non-lu">NON LU</div>
                                {% for notifications in notificationsNotRead %}
                                    <div class="list-group-item" id="non-lu">
                                        <a class="notification notification-flush notification-unread">
                                            <div class="notification-body">
                                                <p class="mb-1">{{ notifications.message|raw }}</p>
                                                <span class="notification-time">
                                                    <span class="me-2 {{ notifications.icon }}"></span>
                                                    le {{ notifications.createdAt|date('d/m/Y Ã  H:i') }}
                                                </span>
                                            </div>
                                        </a>
                                    </div>
                                {% endfor %}
                            {% endif %}
                            <div class="list-group-title border-bottom">LU</div>
                            {% if notificationsRead|length > 0 %}
                                    {% for notifications in notificationsRead %}
                                        <div class="list-group-item" id="notification-lu">
                                            <a class="notification notification-flush">
                                                <div class="notification-body">
                                                    <p class="mb-1">{{ notifications.message|raw }}</p>
                                                    <span class="notification-time">
                                                    <span class="me-2 {{ notifications.icon }}"></span>
                                                    le {{ notifications.createdAt|date('d/m/Y Ã  H:i') }}
                                                </span>
                                                </div>
                                            </a>
                                        </div>
                                    {% endfor %}
                            {% else %}
                                <div class="list-group-item">
                                    <a class="notification notification-flush" id="aucune-notification-lu">
                                        <div class="notification-body">
                                            <p class="mb-1">Aucune notification ðŸ˜€</p>
                                        </div>
                                    </a>
                                </div>
                            {% endif %}
                        </div>
                    <div class="card-footer text-center border-top">
                        <a class="card-link d-block" href="#">Toutes les notifications</a>
                    </div>
                </div>
            </div>
            </div>
        </li>
        <li class="nav-item dropdown">
            <a class="nav-link pe-0 ps-2" id="navbarDropdownUser" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <div class="avatar avatar-xl">
                    <img class="rounded-circle" src="{{ asset('assets/img/avatar/defaut.png') }}" alt="" />
                </div>
            </a>
            <div class="dropdown-menu dropdown-caret dropdown-caret dropdown-menu-end py-0" aria-labelledby="navbarDropdownUser">
                <div class="bg-white dark__bg-1000 rounded-2 py-2">
                    <a style="color: red" class="dropdown-item" href="{{ path('admin.security.deconnexion') }}">
                        <i class="fas fa-sign-out-alt"></i>
                        Se dÃ©connecter
                    </a>
                </div>
            </div>
        </li>
    </ul>
</nav>
{% if notifications is not empty %}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // DÃ©fini le style du curseur en main
        var marquerCommeLu = document.getElementById('marquer-comme-lu');
        if (marquerCommeLu) {
            marquerCommeLu.style = 'cursor: pointer';

            marquerCommeLu.addEventListener('click', function (event) {
                event.preventDefault();

                // Identifie toutes les notifications non lues avant de les marquer comme lues
                var nonLuesElements = document.querySelectorAll('.notification-unread:not(.deja-lue)');

                fetch('{{ path('admin.notification.read') }}', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Marque les notifications comme lues et ajoutez la classe "deja-lue"
                            nonLuesElements.forEach(function (element) {
                                element.classList.remove('notification-unread');
                                element.classList.add('deja-lue');
                            });

                            // Ajoute le code pour cloner et dÃ©placer les Ã©lÃ©ments non lus vers la section "LU"
                            var luDiv = document.getElementById('notification-lu');
                            if (luDiv) {
                                nonLuesElements.forEach(function (nonLueElement) {
                                    var clone = nonLueElement.cloneNode(true);
                                    luDiv.appendChild(clone);
                                    nonLueElement.remove();
                                });
                            }

                            // Supprime la section "NON LU" car il n'y a plus de notifications non lues
                            var nonLuSection = document.getElementById('non-lu');
                            if (nonLuSection) {
                                nonLuSection.remove();
                            }

                            // VÃ©rifie s'il n'y a plus de notifications non lues
                            if (document.querySelectorAll('.notification-unread').length === 0) {
                                var aucuneNotificationLu = document.getElementById('aucune-notification-lu');
                                if (aucuneNotificationLu) {
                                    aucuneNotificationLu.remove();
                                }
                            }

                            // VÃ©rifie si la liste de notifications a une longueur supÃ©rieure Ã  zÃ©ro
                            var notificationsLength = {{ notifications|length }};
                            if (notificationsLength > 0) {
                                // Supprime la classe "fa-shake" de la balise <span>
                                document.querySelector('.fa-bell').classList.remove('fa-shake');

                                // Supprime les classes "notification-indicator" de la balise <a>
                                var notificationLink = document.getElementById('navbarDropdownNotification');
                                if (notificationLink) {
                                    notificationLink.classList.remove('notification-indicator', 'notification-indicator-danger', 'notification-indicator-fill');
                                }

                                // Supprime la deuxiÃ¨me balise <span> avec la classe "notification-indicator-number"
                                var secondNotificationLink = document.querySelector('.notification-indicator-number');
                                if (secondNotificationLink) {
                                    secondNotificationLink.remove();
                                }
                            }

                            // EnlÃ¨ve le bouton "Marquer comme lu" car les notifications ont dÃ©jÃ  Ã©tÃ© marquÃ©es comme lues
                            marquerCommeLu.remove();
                        } else {
                            console.error('Erreur lors de la requÃªte API : ', data.error);
                        }
                    })
                    .catch(error => {
                        console.error('Erreur lors de la requÃªte Fetch', error);
                    });
            });
        }
    });
</script>
{% endif %}