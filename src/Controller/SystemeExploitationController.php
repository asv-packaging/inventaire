<?php

namespace App\Controller;

use App\Entity\SystemeExploitation;
use App\Form\SystemeExploitationFormType;
use App\Repository\SystemeExploitationRepository;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

#[Route('/parametres/systemes-exploitation', name: 'admin.systeme-exploitation.')]
class SystemeExploitationController extends AbstractController
{
    private $menu_active = "os";

    /**
     * @param SystemeExploitationRepository $systemeExploitationRepository
     * @return Response
     * Permet d'afficher la liste des systèmes d'exploitation
     */
    #[Route('', name: 'show')]
    public function index(SystemeExploitationRepository $systemeExploitationRepository): Response
    {
        $systemesExploitation = $systemeExploitationRepository->findBy([], ['id' => 'DESC']);

        return $this->render('systeme_exploitation/show.html.twig', [
            'systemesExploitation' => $systemesExploitation,
            'menu_active' => $this->menu_active,
        ]);
    }

    /**
     * @param EntityManagerInterface $entityManager
     * @param Request $request
     * @return Response
     * Permet d'ajouter un système d'exploitation
     */
    #[Route('/ajouter', name: 'add')]
    public function add(EntityManagerInterface $entityManager, Request $request): Response
    {
        $systemeExploitation = new SystemeExploitation();

        $systemeExploitationForm = $this->createForm(SystemeExploitationFormType::class, $systemeExploitation);

        $systemeExploitationForm->handleRequest($request);

        if($systemeExploitationForm->isSubmitted() && $systemeExploitationForm->isValid())
        {
            $entityManager->persist($systemeExploitation);
            $entityManager->flush();

            $this->addFlash('success', "Le système d'exploitation a bien été ajouté !");

            return $this->redirectToRoute('admin.systeme-exploitation.show');
        }

        return $this->render('systeme_exploitation/add.html.twig', [
            'systemeExploitationForm' => $systemeExploitationForm->createView(),
            'menu_active' => $this->menu_active,
        ]);
    }

    /**
     * @param SystemeExploitation $systemeExploitation
     * @param EntityManagerInterface $entityManager
     * @param Request $request
     * @return Response
     * Permet de modifier un système d'exploitation
     */
    #[Route('/{id}', name: 'edit', methods: ['GET', 'POST'])]
    public function edit(SystemeExploitation $systemeExploitation, EntityManagerInterface $entityManager, Request $request): Response
    {
        $systemeExploitationForm = $this->createForm(SystemeExploitationFormType::class, $systemeExploitation);

        $systemeExploitationForm->handleRequest($request);

        if($systemeExploitationForm->isSubmitted() && $systemeExploitationForm->isValid())
        {
            $entityManager->persist($systemeExploitation);
            $entityManager->flush();

            $this->addFlash('success', "Le système d'exploitation a bien été modifié !");

            return $this->redirectToRoute('admin.systeme-exploitation.show');
        }

        return $this->render('systeme_exploitation/edit.html.twig', [
            'systemeExploitationForm' => $systemeExploitationForm->createView(),
            'menu_active' => $this->menu_active,
        ]);
    }

    /**
     * @param SystemeExploitation $systemeExploitation
     * @param EntityManagerInterface $entityManager
     * @param Request $request
     * @return Response
     * Permet de supprimer un système d'exploitation
     */
    #[Route('/{id}', name: 'delete', methods: ['DELETE'])]
    public function delete(SystemeExploitation $systemeExploitation, EntityManagerInterface $entityManager, Request $request): Response
    {
        if($this->isCsrfTokenValid('delete'.$systemeExploitation->getId(), $request->get('_token')))
        {
            $entityManager->remove($systemeExploitation);
            $entityManager->flush();

            $this->addFlash('success', "Le système d'exploitation a bien été supprimé !");
        }

        return $this->redirectToRoute('admin.systeme-exploitation.show');
    }
}
